name: Manual Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g. v1.0.0)'
        required: true
      notes:
        description: 'Release notes'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build project inside container
        run: |
          git config --file .gitmodules submodule.vendor/wayland-odin.url https://github.com/jqcorreia/wayland-odin.git
          git submodule sync
          git submodule update --init --recursive

          docker run --rm \
            -v ${{ github.workspace }}:/code \
            -w /code \
            ghcr.io/jqcorreia/super-build:latest \
            ci/ci_build.sh 

          tar -czf super.tar.gz build/super

      - name: Upload tar.gz as artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-archive
          path: super.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ github.event.inputs.tag }}
          git push origin ${{ github.event.inputs.tag }}

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: release-archive

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          body: ${{ github.event.inputs.notes }}
          files: super.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

